include 'desktop', 'core', 'server', 'ios', 'annotations', 'tools', 'tests'

def use = { ... names ->
    for(String name : names){
        include(name)
        project(name).projectDir = new File(settingsDir, "../${name.substring(1).replace(":", "/")}")
    }
}

def properties = new Properties()

if(new File(settingsDir, 'local.properties').exists() && System.getenv("JITPACK") != "true"){
    properties.load(new File(settingsDir, 'local.properties').newDataInputStream())

    if(properties.containsKey("sdk.dir")){
        include 'android'
    }else{
        println("No android SDK dir found Not loading Android module.")
    }
}else{
    println("No local.properties found. Not loading Android module.")
}

if(!hasProperty("release")){
    if(new File(settingsDir, '../Arc').exists()){
        use(
        ':Arc', 
        ':Arc:arc-core', 
        ':Arc:extensions', 
        ':Arc:extensions:freetype', 
        ':Arc:extensions:recorder', 
        ':Arc:extensions:arcnet', 
        ':Arc:extensions:packer',
        ':Arc:extensions:g3d',
        ':Arc:extensions:fx', 
        ':Arc:backends', 
        ':Arc:backends:backend-sdl', 
        ':Arc:backends:backend-android',
        ':Arc:backends:backend-robovm',
        ':Arc:backends:backend-headless'
        )
    }
    
    if(new File(settingsDir, '../Mindustry-Debug').exists()){
        include(":debug")
        project(":debug").projectDir = new File(settingsDir, "../Mindustry-Debug")
    }
}else{
    println("Not including local repositories.")
}
